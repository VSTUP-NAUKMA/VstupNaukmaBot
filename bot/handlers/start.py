from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes, ConversationHandler, MessageHandler, filters, CallbackContext


reply_keyboard = [['–í—Å—Ç—É–ø –Ω–∞ –Ω–∞–≤—á–∞–Ω–Ω—è', '–°–∏—Å—Ç–µ–º–∞ –≤—Å—Ç—É–ø—É'],
                  ['–°—Ç—É–¥–µ–Ω—Ç—Å—å–∫–µ –∂–∏—Ç—Ç—è', '–ù–∞–≤—á–∞–ª—å–Ω–∏–π –ø—Ä–æ—Ü–µ—Å'],
                  ['–ö–æ–Ω—Ç–∞–∫—Ç–∏', '–ì—É—Ä—Ç–æ–∂–∏—Ç–∫–∏'],
                  ['–ß–∞—Ç-–ø—ñ–¥—Ç—Ä–∏–º–∫–∞', '–•–æ—á—É –ø—Ä–∏–∫–æ–ª—é—Ö—É üòú']]
keyboard_markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    username = user.username or str(user.id)
    try:
        with open("./usernames.txt", "r") as file:
            existing_users = set(file.read().splitlines())
    except FileNotFoundError:
        existing_users = set()

    if username not in existing_users:
        with open("./usernames.txt", "a") as file:
            file.write(username + "\n")
            existing_users.add(username)

    await update.message.reply_text("–¢–µ–∫—Å—Ç —Å—Ç–∞—Ä—Ç", reply_markup=keyboard_markup)


async def home(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π —Ä–æ–∑–¥—ñ–ª", reply_markup=keyboard_markup)


async def fresh_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data.clear()
    await update.message.reply_text("–í–∞—à—ñ –¥–∞–Ω—ñ —Ç–∞ —Å—Ç–∞–Ω –±—É–ª–∏ —É—Å–ø—ñ—à–Ω–æ —Å–∫–∏–Ω—É—Ç—ñ. –ü–æ—á–Ω–µ–º–æ –∑–Ω–æ–≤—É!")
    await start(update, context)
    return ConversationHandler.END


start_handler = ConversationHandler(
    entry_points=[MessageHandler(filters.Regex('start'), start)],
    states={
    },
    fallbacks=[],
    name="main-handler",
    persistent=True,
)
